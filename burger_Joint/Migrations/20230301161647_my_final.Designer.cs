// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace burger_Joint.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230301161647_my_final")]
    partial class my_final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EmployeeStore", b =>
                {
                    b.Property<int>("KEEPSEmployee_ID")
                        .HasColumnType("int");

                    b.Property<int>("KEEPSItem_ID")
                        .HasColumnType("int");

                    b.HasKey("KEEPSEmployee_ID", "KEEPSItem_ID");

                    b.HasIndex("KEEPSItem_ID");

                    b.ToTable("EmployeeStore");
                });

            modelBuilder.Entity("burger_Joint.Models.Administrator", b =>
                {
                    b.Property<int>("Administrator_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Administrator_ID");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("burger_Joint.Models.Customer", b =>
                {
                    b.Property<int>("Cus_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Phone_num")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cus_Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("burger_Joint.Models.Employee", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Administrator_ID")
                        .HasColumnType("int");

                    b.Property<int>("Administrator_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Employee_ID");

                    b.HasIndex("Administrator_ID1");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("burger_Joint.Models.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cus_Id")
                        .HasColumnType("int");

                    b.Property<int>("CustomerCus_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Employee_ID")
                        .HasColumnType("int");

                    b.Property<int>("Employee_ID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Total_amount")
                        .HasColumnType("int");

                    b.HasKey("Order_Id");

                    b.HasIndex("CustomerCus_Id");

                    b.HasIndex("Employee_ID1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("burger_Joint.Models.Payment", b =>
                {
                    b.Property<int>("Payment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Order_Id")
                        .HasColumnType("int");

                    b.Property<int>("Order_Id1")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Payment_Id");

                    b.HasIndex("Order_Id1");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("burger_Joint.Models.Store", b =>
                {
                    b.Property<int>("Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Item_ID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("EmployeeStore", b =>
                {
                    b.HasOne("burger_Joint.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("KEEPSEmployee_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("burger_Joint.Models.Store", null)
                        .WithMany()
                        .HasForeignKey("KEEPSItem_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("burger_Joint.Models.Employee", b =>
                {
                    b.HasOne("burger_Joint.Models.Administrator", "Administrator")
                        .WithMany("Employees")
                        .HasForeignKey("Administrator_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrator");
                });

            modelBuilder.Entity("burger_Joint.Models.Order", b =>
                {
                    b.HasOne("burger_Joint.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerCus_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("burger_Joint.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("Employee_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("burger_Joint.Models.Payment", b =>
                {
                    b.HasOne("burger_Joint.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("Order_Id1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("burger_Joint.Models.Administrator", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("burger_Joint.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("burger_Joint.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("burger_Joint.Models.Order", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
